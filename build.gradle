plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.7'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.bike'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://jitpack.io")
	}
}

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	implementation("org.springframework.statemachine:spring-statemachine-core:3.2.0")
	annotationProcessor ("org.springframework.boot:spring-boot-configuration-processor")

	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.cloud:spring-cloud-starter-config")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-artemis")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("io.micrometer:micrometer-tracing-bridge-brave")
	implementation("io.zipkin.reporter2:zipkin-reporter-brave")
	implementation("io.micrometer:micrometer-registry-prometheus")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
	implementation ("org.mapstruct:mapstruct:1.5.5.Final")
	implementation("com.h2database:h2:2.1.214")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation ("org.mapstruct:mapstruct-processor:1.5.5.Final")
	compileOnly("org.projectlombok:lombok")
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	annotationProcessor("org.projectlombok:lombok")
	annotationProcessor ("org.mapstruct:mapstruct-processor:1.5.5.Final")
	testAnnotationProcessor("org.projectlombok:lombok")
	testAnnotationProcessor ("org.springframework.boot:spring-boot-configuration-processor")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.springframework.boot:spring-boot-starter-web")
	testCompileOnly("org.projectlombok:lombok")
	testImplementation("com.github.tomakehurst:wiremock:3.0.0-beta-10")
	testImplementation("org.awaitility:awaitility:4.2.0")
	testImplementation("org.apache.activemq:artemis-jms-server:2.29.0")
	testImplementation("com.h2database:h2:2.1.214")
	testImplementation("org.springframework.boot:spring-boot-starter-data-jpa")



}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.named('compileJava') {
	options.compilerArgs.add("-Amapstruct.defaultComponentModel=spring")
}
